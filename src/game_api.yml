swagger: "2.0"
info:
  description: Game API
  version: "1.0.0"
  title: Game API
consumes:
  - "application/json"
produces:
  - "application/json"

basePath: "/v1/game"

paths:
  /health:
    get:
      operationId: utils.controller.game_api.probe
      tags:
        - "Game"
      summary: "Status check"
      description: "Verifies if the API is ready."
      responses:
        200:
          description: "API ready"
          schema:
            type: object
            properties:
              message:
                type: string
              data:
                type: object
                properties:
                  available:
                    type: integer
        500:
          description: "API not ready"

  /:
    get:
      operationId: utils.controller.game_api.read
      security:
        - jwt: ['secret']
      tags:
        - "Game"
      parameters:
        - name: length
          in: query
          type: integer
          required: false
          description: "Amount of game to select"
        - name: offset
          in: query
          type: integer
          required: false
          description: "Amount of game to skip"
        - name: id_
          in: query
          type: string
          required: false
        - name: creation_datetime
          in: query
          type: string
          required: false
        - name: last_modified_datetime
          in: query
          type: string
          required: false
        - name: pontuacao
          in: query
          type: string
          required: false
        - name: senha
          in: query
          type: string
          required: false
        - name: times
          in: query
          type: string
          required: false
        - name: partidas
          in: query
          type: string
          required: false
      summary: "Lists all Game available"
      description: |
        "Lists all Game in the database. May be filtered by all fields."
      responses:
        200:
          description: "Available Game"
          schema:
            type: object
            properties:
              success:
                type: boolean
              message:
                type: string
              data:
                type: object
                properties:
                  total:
                    type: integer
                  results:
                    type: array
                    properties:
                      entities:
                        type: object
        500:
          description: "An error ocurred"
          schema:
            type: object
            properties:
              success:
                type: boolean
              message:
                type: string
              data:
                type: object
                properties:
                  error:
                    type: string
    post:
      operationId: utils.controller.game_api.create
      security:
        - jwt: [ 'secret' ]
      tags:
        - "Game"
      parameters:
        - name: entity
          in: body
          schema:
            type: object
            properties:
              n_players:
                type: integer
                minimum: 1
                maximum: 4
                description: "Number of human players in the game"
              senha:
                type: string
                description: "Game password"
          required: true
          description: "Game to add"
      summary: "Create a new Game."
      description: |
        "Creates a new Game in the database"
      responses:
        201:
          description: "Game created"
          schema:
            type: object
            properties:
              success:
                type: boolean
              message:
                type: string
              data:
                type: object
                properties:
                  entity:
                    type: object
        500:
          description: "An error ocurred"
          schema:
            type: object
            properties:
              success:
                type: boolean
              message:
                type: string
              data:
                type: object
                properties:
                  error:
                    type: string

  /{id_}:
    get:
      operationId: utils.controller.game_api.read_one
      security:
        - jwt: [ 'secret' ]
      tags:
        - "Game"
      parameters:
        - name: id_
          in: path
          type: string
          required: true
          description: "Id of game to select"
      summary: "Recover game"
      description: |
        "Select game by Id"
      responses:
        201:
          description: "Game"
          schema:
            type: object
            properties:
              success:
                type: boolean
              message:
                type: string
              data:
                type: object
                properties:
                  entity:
                    type: object
        500:
          description: "An error ocurred"
          schema:
            type: object
            properties:
              success:
                type: boolean
              message:
                type: string
              data:
                type: object
                properties:
                  error:
                    type: string
    post:
      operationId: utils.controller.game_api.start_game
      security:
        - jwt: [ 'secret' ]
      tags:
        - "Game"
      parameters:
        - name: id_
          in: path
          type: string
          required: true
          description: "Game to start"
      summary: "Start a game."
      description: |
        "Starts a game by creating a new Partida in the Game"
      responses:
        201:
          description: "Game started"
          schema:
            type: object
            properties:
              success:
                type: boolean
              message:
                type: string
              data:
                type: object
                properties:
                  entity:
                    type: object
        500:
          description: "An error ocurred"
          schema:
            type: object
            properties:
              success:
                type: boolean
              message:
                type: string
              data:
                type: object
                properties:
                  error:
                    type: string
                    
    delete:
      operationId: utils.controller.game_api.delete
      security:
        - jwt: [ 'secret' ]
      tags:
        - "Game"
      parameters:
        - name: id_
          in: path
          type: string
          required: true
          description: "Id of game to select"
      summary: "Delete Game"
      description: |
        "Delete Game in database."
      responses:
        200:
          description: "Game"
          schema:
            type: object
            properties:
              success:
                type: boolean
              message:
                type: string
              data:
                type: object
                properties:
                  entity:
                    type: object
        500:
          description: "An error ocurred"
          schema:
            type: object
            properties:
              success:
                type: boolean
              message:
                type: string
              data:
                type: object
                properties:
                  error:
                    type: string

  /{id_}/join:
    put:
      operationId: utils.controller.game_api.join
      security:
        - jwt: ['secret']
      tags:
        - "Game"
      parameters:
        - name: id_
          in: path
          type: string
          required: true
          description: "Id of game to join"
        - name: password
          in: body
          schema:
            type: object
            properties:
              senha:
                type: string
          required: false
          description: "Game password"
      summary: "Join Game"
      description: |
        "Join an open game."
      responses:
        200:
          description: "Game"
          schema:
            type: object
            properties:
              success:
                type: boolean
              message:
                type: string
              data:
                type: object
                properties:
                  entity:
                    type: object
        401:
          description: "Unauthorized due to invalid or not present token"
        500:
          description: "An error ocurred"
          schema:
            type: object
            properties:
              success:
                type: boolean
              message:
                type: string
              data:
                type: object
                properties:
                  error:
                    type: string

  /{id_}/join-team/{team_id_}:
    put:
      operationId: utils.controller.game_api.join_team
      security:
        - jwt: ['secret']
      tags:
        - "Game"
      parameters:
        - name: id_
          in: path
          type: string
          required: true
          description: "Id of the game"
        - name: team_id_
          in: path
          type: integer
          required: true
          enum: [0, 1]
          description: "Team to join in game"
      summary: "Join Team in Game"
      description: |
        "Join a team in a game."
      responses:
        200:
          description: "Game"
          schema:
            type: object
            properties:
              success:
                type: boolean
              message:
                type: string
              data:
                type: object
                properties:
                  entity:
                    type: object
        401:
          description: "Unauthorized due to invalid or not present token"
        500:
          description: "An error ocurred"
          schema:
            type: object
            properties:
              success:
                type: boolean
              message:
                type: string
              data:
                type: object
                properties:
                  error:
                    type: string
  /{id_}/partida:
    get:
      operationId: utils.controller.partida_api.read
      security:
        - jwt: ['secret']
      tags:
        - "Partida"
      parameters:
        - name: id_
          in: path
          type: string
          required: true
          description: "Id of the game"
      summary: "Get partida in progess"
      description: |
        "Returns the partida in progress of the game."
      responses:
        200:
          description: "Partida"
          schema:
            type: object
            properties:
              success:
                type: boolean
              message:
                type: string
              data:
                type: object
                properties:
                  entity:
                    type: object
        401:
          description: "Unauthorized due to invalid or not present token"
        500:
          description: "An error ocurred"
          schema:
            type: object
            properties:
              success:
                type: boolean
              message:
                type: string
              data:
                type: object
                properties:
                  error:
                    type: string
    post:
      operationId: utils.controller.partida_api.play
      security:
        - jwt: ['secret']
      tags:
        - "Partida"
      parameters:
        - name: id_
          in: path
          type: string
          required: true
          description: "Id of the game"
        - name: card
          in: body
          type: integer
          required: true
          description: "Id of card to play"
      summary: "Play card in rodada"
      description: |
        "Plays a card for the partida in progress."
      responses:
        200:
          description: "Partida"
          schema:
            type: object
            properties:
              success:
                type: boolean
              message:
                type: string
              data:
                type: object
                properties:
                  entity:
                    type: object
        401:
          description: "Unauthorized due to invalid or not present token"
        500:
          description: "An error ocurred"
          schema:
            type: object
            properties:
              success:
                type: boolean
              message:
                type: string
              data:
                type: object
                properties:
                  error:
                    type: string

  /{id_}/partida/raise:
    put:
      operationId: utils.controller.partida_api.raise_
      security:
        - jwt: ['secret']
      tags:
        - "Partida"
      parameters:
        - name: id_
          in: path
          type: string
          required: true
          description: "Id of the game"
      summary: "Raise partida"
      description: |
        "Raises the partida value in 3."
      responses:
        200:
          description: "Partida"
          schema:
            type: object
            properties:
              success:
                type: boolean
              message:
                type: string
              data:
                type: object
                properties:
                  entity:
                    type: object
        401:
          description: "Unauthorized due to invalid or not present token"
        500:
          description: "An error ocurred"
          schema:
            type: object
            properties:
              success:
                type: boolean
              message:
                type: string
              data:
                type: object
                properties:
                  error:
                    type: string

  /{id_}/partida/fold:
    put:
      operationId: utils.controller.partida_api.fold
      security:
        - jwt: ['secret']
      tags:
        - "Partida"
      parameters:
        - name: id_
          in: path
          type: string
          required: true
          description: "Id of the game"
      summary: "Fold partida"
      description: |
        "Folds the partida and gives the old points to the other team."
      responses:
        200:
          description: "Partida"
          schema:
            type: object
            properties:
              success:
                type: boolean
              message:
                type: string
              data:
                type: object
                properties:
                  entity:
                    type: object
        401:
          description: "Unauthorized due to invalid or not present token"
        500:
          description: "An error ocurred"
          schema:
            type: object
            properties:
              success:
                type: boolean
              message:
                type: string
              data:
                type: object
                properties:
                  error:
                    type: string

securityDefinitions:
    jwt:
        type: apiKey
        name: Authorization
        in: header
        x-authentication-scheme: Bearer
        x-bearerInfoFunc: nova_api.auth.decode_jwt_token
